# Generated by Django 5.1.6 on 2025-03-22 11:42

import django.db.models.deletion
import profiles.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BackGroundJobsProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='background_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Costume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_for_rent', models.BooleanField(default=False)),
                ('is_for_sale', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='item_images/')),
                ('size', models.CharField(blank=True, max_length=50, null=True)),
                ('worn_by', models.CharField(blank=True, max_length=255, null=True)),
                ('era', models.CharField(blank=True, max_length=255, null=True)),
                ('BackGroundJobsProfile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_items', to='profiles.backgroundjobsprofile')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_items', to='profiles.genre')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArtisticMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_for_rent', models.BooleanField(default=False)),
                ('is_for_sale', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='item_images/')),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('condition', models.CharField(blank=True, max_length=255, null=True)),
                ('BackGroundJobsProfile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_items', to='profiles.backgroundjobsprofile')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_items', to='profiles.genre')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_for_rent', models.BooleanField(default=False)),
                ('is_for_sale', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='item_images/')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('is_indoor', models.BooleanField(default=True)),
                ('BackGroundJobsProfile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_items', to='profiles.backgroundjobsprofile')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_items', to='profiles.genre')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Memorabilia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_for_rent', models.BooleanField(default=False)),
                ('is_for_sale', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='item_images/')),
                ('signed_by', models.CharField(blank=True, max_length=255, null=True)),
                ('authenticity_certificate', models.FileField(blank=True, null=True, upload_to='certificates/')),
                ('BackGroundJobsProfile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_items', to='profiles.backgroundjobsprofile')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_items', to='profiles.genre')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MusicItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_for_rent', models.BooleanField(default=False)),
                ('is_for_sale', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='item_images/')),
                ('instrument_type', models.CharField(blank=True, max_length=255, null=True)),
                ('used_by', models.CharField(blank=True, max_length=255, null=True)),
                ('BackGroundJobsProfile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_items', to='profiles.backgroundjobsprofile')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_items', to='profiles.genre')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Prop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_for_rent', models.BooleanField(default=False)),
                ('is_for_sale', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='item_images/')),
                ('material', models.CharField(blank=True, max_length=255, null=True)),
                ('used_in_movie', models.CharField(blank=True, max_length=255, null=True)),
                ('condition', models.CharField(blank=True, max_length=255, null=True)),
                ('BackGroundJobsProfile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_items', to='profiles.backgroundjobsprofile')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_items', to='profiles.genre')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RareItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_for_rent', models.BooleanField(default=False)),
                ('is_for_sale', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='item_images/')),
                ('provenance', models.TextField(blank=True, null=True)),
                ('is_one_of_a_kind', models.BooleanField(default=False)),
                ('BackGroundJobsProfile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_items', to='profiles.backgroundjobsprofile')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_items', to='profiles.genre')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TalentUserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_verified', models.BooleanField(default=False)),
                ('profile_complete', models.BooleanField(default=False)),
                ('account_type', models.CharField(choices=[('gold', 'Gold'), ('silver', 'Silver'), ('free', 'Free')], default='free', max_length=10)),
                ('country', models.CharField(default='country', max_length=25)),
                ('city', models.CharField(default='city', max_length=25)),
                ('zipcode', models.CharField(default='', max_length=30)),
                ('phone', models.CharField(default='', max_length=20)),
                ('date_of_birth', models.DateField(blank=True, help_text="The user's date of birth.", null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], default='Male', max_length=1)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='talent_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TalentMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Untitled Media', max_length=124)),
                ('media_info', models.TextField(max_length=160)),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video')], max_length=10)),
                ('media_file', models.FileField(upload_to=profiles.models.user_media_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('talent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='profiles.talentuserprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Talent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('face_pic', models.ImageField(blank=True, null=True, upload_to='talent/user/facepic')),
                ('full_pic', models.ImageField(blank=True, null=True, upload_to='talent/user/fullpic')),
                ('height', models.FloatField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('tattoos', models.BooleanField(default=False)),
                ('scars', models.BooleanField(default=False)),
                ('skin_tone', models.CharField(blank=True, choices=[('FA', 'Fair'), ('ME', 'Medium'), ('DA', 'Dark')], max_length=2, null=True)),
                ('eye_color', models.CharField(blank=True, choices=[('BR', 'Brown'), ('BL', 'Blue'), ('GR', 'Green'), ('BK', 'Black')], max_length=2, null=True)),
                ('hair_color', models.CharField(blank=True, choices=[('BR', 'Brown'), ('BL', 'Black'), ('BD', 'Blonde'), ('RD', 'Red')], max_length=2, null=True)),
                ('distinctive_features', models.TextField(blank=True, null=True)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='talent_details', to='profiles.talentuserprofile')),
            ],
        ),
        migrations.CreateModel(
            name='SocialMediaLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Facebook URL')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='Twitter URL')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Instagram URL')),
                ('linkedin', models.URLField(blank=True, null=True, verbose_name='LinkedIn URL')),
                ('youtube', models.URLField(blank=True, null=True, verbose_name='YouTube URL')),
                ('tiktok', models.URLField(blank=True, null=True, verbose_name='TikTok URL')),
                ('snapchat', models.URLField(blank=True, null=True, verbose_name='Snapchat URL')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='social_media_links', to='profiles.talentuserprofile')),
            ],
        ),
        migrations.CreateModel(
            name='HybridWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hyganras', models.CharField(max_length=10)),
                ('performance_skill', models.CharField(max_length=100)),
                ('fitness_level', models.CharField(blank=True, choices=[('BG', 'Beginner'), ('IN', 'Intermediate'), ('AD', 'Advanced')], max_length=2, null=True)),
                ('running_speed', models.FloatField(blank=True, null=True)),
                ('jump_height', models.FloatField(blank=True, null=True)),
                ('flexibility_level', models.CharField(blank=True, choices=[('BG', 'Beginner'), ('IN', 'Intermediate'), ('AD', 'Advanced')], max_length=2, null=True)),
                ('body_type', models.CharField(blank=True, choices=[('SL', 'Slim'), ('AV', 'Average'), ('AT', 'Athletic'), ('OV', 'Overweight')], max_length=2, null=True)),
                ('chest_size', models.FloatField(blank=True, null=True)),
                ('waist_size', models.FloatField(blank=True, null=True)),
                ('hip_size', models.FloatField(blank=True, null=True)),
                ('dance_style', models.CharField(blank=True, max_length=50, null=True)),
                ('martial_arts_skills', models.TextField(blank=True, null=True)),
                ('acrobatic_skills', models.TextField(blank=True, null=True)),
                ('stunt_experience', models.TextField(blank=True, null=True)),
                ('performance_videos', models.URLField(blank=True, null=True)),
                ('social_media_links', models.TextField(blank=True, null=True)),
                ('availability', models.CharField(blank=True, max_length=50, null=True)),
                ('preferred_roles', models.TextField(blank=True, null=True)),
                ('certifications', models.TextField(blank=True, null=True)),
                ('training', models.TextField(blank=True, null=True)),
                ('special_skills', models.TextField(blank=True, null=True)),
                ('awards', models.TextField(blank=True, null=True)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='hybrid_worker', to='profiles.talentuserprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ExpressiveWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exganras', models.CharField(max_length=10)),
                ('performance_skill', models.CharField(max_length=100)),
                ('acting_experience', models.TextField(blank=True, null=True)),
                ('vocal_range', models.CharField(blank=True, max_length=20, null=True)),
                ('awards', models.TextField(blank=True, null=True)),
                ('training', models.TextField(blank=True, null=True)),
                ('languages_spoken', models.TextField(blank=True, null=True)),
                ('accents', models.TextField(blank=True, null=True)),
                ('performance_style', models.CharField(blank=True, max_length=50, null=True)),
                ('stage_presence', models.CharField(blank=True, max_length=50, null=True)),
                ('special_skills', models.TextField(blank=True, null=True)),
                ('performance_videos', models.URLField(blank=True, null=True)),
                ('availability', models.CharField(blank=True, max_length=50, null=True)),
                ('preferred_roles', models.TextField(blank=True, null=True)),
                ('union_membership', models.CharField(blank=True, max_length=50, null=True)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='expressive_worker', to='profiles.talentuserprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_for_rent', models.BooleanField(default=False)),
                ('is_for_sale', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='item_images/')),
                ('make', models.CharField(blank=True, max_length=255, null=True)),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('BackGroundJobsProfile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_items', to='profiles.backgroundjobsprofile')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_items', to='profiles.genre')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VisualWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viganras', models.CharField(max_length=10)),
                ('modeling_experience', models.TextField(blank=True, null=True)),
                ('preferred_styles', models.CharField(blank=True, max_length=255, null=True)),
                ('portfolio_link', models.URLField(blank=True, null=True)),
                ('measurements', models.CharField(blank=True, max_length=20, null=True)),
                ('shoe_size', models.FloatField(blank=True, null=True)),
                ('piercing_locations', models.TextField(blank=True, null=True)),
                ('availability', models.CharField(blank=True, max_length=50, null=True)),
                ('preferred_work', models.TextField(blank=True, null=True)),
                ('certifications', models.TextField(blank=True, null=True)),
                ('influencer_niche', models.CharField(blank=True, max_length=100, null=True)),
                ('engagement_rate', models.FloatField(blank=True, null=True)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='visual_worker', to='profiles.talentuserprofile')),
            ],
        ),
    ]
