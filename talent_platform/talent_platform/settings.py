"""
Django settings for talent_platform project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
import stripe
from dotenv import load_dotenv


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# DigitalOcean Spaces Configuration (S3-compatible)
USE_SPACES = os.getenv('USE_SPACES', 'False').lower() == 'true'

# Video processing settings
MAX_VIDEO_PROCESSING_TASKS = 2  # Maximum concurrent video processing tasks
VIDEO_PROCESSING_TIMEOUT = 400  # Maximum time in seconds for processing a video (reduced for 100MB limit)

# Media file size limits
MAX_VIDEO_SIZE = 100 * 1024 * 1024  # 100 MB maximum video size
MAX_IMAGE_SIZE = 10 * 1024 * 1024   # 10 MB maximum image size

if USE_SPACES:
    # S3/Spaces settings
    AWS_ACCESS_KEY_ID = os.getenv('SPACES_ACCESS_KEY', '')
    AWS_SECRET_ACCESS_KEY = os.getenv('SPACES_SECRET_KEY', '')
    AWS_STORAGE_BUCKET_NAME = os.getenv('SPACES_BUCKET_NAME', '')
    AWS_S3_ENDPOINT_URL = os.getenv('SPACES_ENDPOINT_URL', 'https://nyc3.digitaloceanspaces.com')
    AWS_S3_OBJECT_PARAMETERS = {
        'CacheControl': 'max-age=86400',
    }
    AWS_DEFAULT_ACL = 'public-read'
    AWS_LOCATION = 'media'
    
    # Use custom storage backend for media files
    DEFAULT_FILE_STORAGE = 'talent_platform.storage_backends.MediaStorage'
    
    # Public media URL
    MEDIA_URL = f'https://{AWS_STORAGE_BUCKET_NAME}.{AWS_S3_ENDPOINT_URL.split("://")[1]}/{AWS_LOCATION}/'


# Quick-start development settings - unsuitable for production



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', '7@aaku@q1$6&^xg6re*i&(_&@m69-#&^ql%sh^u9!96ljm#cq=')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#ALLOWED_HOSTS = []


# Application definition
AUTH_USER_MODEL = 'users.BaseUser'

INSTALLED_APPS = [
    'users',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'profiles',
    'corsheaders',
    'disposable_email_checker',
    'dashboard',
    'payments',
    'django_filters',
]





    
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'payments.middleware.UserTypeThrottlingMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOWED_ORIGINS = [
    "http://192.168.0.119:3000",  # React frontend IP:port
    "http://192.168.1.3:3000",  # Your IP address
    "http://192.168.77.79:3000",
    "http://192.168.77.85:3000",
]

CSRF_TRUSTED_ORIGINS = [
    "http://192.168.0.119:3000",
    "http://192.168.1.3:3000",
    "http://192.168.77.79:3000",
    "http://192.168.77.85:3000",
]

ALLOWED_HOSTS = [
    'localhost',
    '192.168.0.108',
    '192.168.77.79',
    '192.168.77.85',  # <-- your backend IP
    '39c3-149-34-246-34.ngrok-free.app' # <-- add your ngrok domain here,

]
# settings.py
SECURE_CROSS_ORIGIN_OPENER_POLICY = 'unsafe-none'
        
ROOT_URLCONF = 'talent_platform.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'talent_platform.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Load environment variables first
load_dotenv()

# Email Configuration for Development
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
DEFAULT_FROM_EMAIL = 'noreply@example.com'
# Emails will be printed to console instead of being sent

# Security Settings
SECURE_SSL_REDIRECT = False  # Set to True in production
SESSION_COOKIE_SECURE = False  # Set to True in production
CSRF_COOKIE_SECURE = False  # Set to True in production





REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle',
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '30/hour',
        'user': '100/hour',
        'talent_user': '100/hour',
        'background_user': '100/hour',
        'dashboard_user': '200/hour',
        'admin_dashboard_user': '300/hour',
        'payment_endpoints': '30/hour',
        'restricted_country': '50/hour',
    }
}

# JWT settings
from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),  # Access token validity
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),    # Refresh token validity
    'ROTATE_REFRESH_TOKENS': True,                  # Rotate refresh tokens
    'BLACKLIST_AFTER_ROTATION': True,               # Blacklist old tokens
}



from dotenv import load_dotenv

# Load environment variables first
load_dotenv()

# Stripe Configuration
STRIPE_PUBLIC_KEY = os.getenv('STRIPE_PUBLIC_KEY')
STRIPE_SECRET_KEY = os.getenv('STRIPE_SECRET_KEY')
STRIPE_WEBHOOK_SECRET = os.getenv('STRIPE_WEBHOOK_SECRET')




# Add to settings.py
STRIPE_PRICE_IDS = {
    'silver': os.getenv('STRIPE_PRICE_SILVER'),
    'gold': os.getenv('STRIPE_PRICE_GOLD'),
    'platinum': os.getenv('STRIPE_PRICE_PLATINUM'),
    'back_ground_jobs': os.getenv('STRIPE_PRICE_BACKGROUND_JOBS'),
}

# Stripe Price IDs
STRIPE_SILVER_PRICE_ID = os.getenv('STRIPE_SILVER_PRICE_ID')
STRIPE_GOLD_PRICE_ID = os.getenv('STRIPE_GOLD_PRICE_ID')
STRIPE_PLATINUM_PRICE_ID = os.getenv('STRIPE_PLATINUM_PRICE_ID')
STRIPE_VERIFICATION_PRICE_ID = os.getenv('STRIPE_VERIFICATION_PRICE_ID')
STRIPE_FEATURED_PRICE_ID = os.getenv('STRIPE_FEATURED_PRICE_ID')
STRIPE_CUSTOM_URL_PRICE_ID = os.getenv('STRIPE_CUSTOM_URL_PRICE_ID')
STRIPE_BACKGROUND_JOBS_PRICE_ID = os.getenv('STRIPE_BACKGROUND_JOBS_PRICE_ID')
STRIPE_BANDS_PRICE_ID = os.getenv('STRIPE_BANDS_PRICE_ID')
